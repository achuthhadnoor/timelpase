function UpdateSettings(e){e.autolaunch?autoLauncher.enable():autoLauncher.disable(),settings=e,store.set("lapse",e)}function initiVariables(){hours=0,minutes=0,seconds=0,isRecording=!1,isPaused=!1,tray.setImage(appIcon),tray.setToolTip("Lapse | Start recording"),tray.setTitle(""),clearInterval(interval),imagesDir=null}function showNotification(e){const t={body:e};new Notification(t,{icon:appIcon}).show()}function takeScreenShot(e){var t=path.join(imagesDir,`lapse${e++}.jpeg`);console.log(t),screenshot({filename:t})}function createBrowserWindow(){browserWindow=new BrowserWindow({icon:path.join("app.png"),frame:!1,height:300,width:300,resizable:!1,alwaysOnTop:!0,skipTaskbar:!0,webPreferences:{nodeIntegration:!0}}),browserWindow.loadFile("index.html")}const{app:app,BrowserWindow:BrowserWindow,Tray:Tray,Notification:Notification,globalShortcut:globalShortcut,dialog:dialog,Menu:Menu,shell:shell,ipcMain:ipcMain}=require("electron"),path=require("path"),temp=require("temp"),screenshot=require("screenshot-desktop");var{spawn:spawn}=require("child_process");const util=require("electron-util"),ffmpeg=require("@ffmpeg-installer/ffmpeg"),ffmpegPath=util.fixPathForAsarUnpack(ffmpeg.path),AutoLaunch=require("auto-launch"),Store=require("electron-store");temp.track();const gotTheLock=app.requestSingleInstanceLock();gotTheLock||app.quit();const{hasScreenCapturePermission:hasScreenCapturePermission,hasPromptedForPermission:hasPromptedForPermission,openSystemPreferences:openSystemPreferences}=require("mac-screen-capture-permissions");let store=new Store;const autoLauncher=new AutoLaunch({name:"Lapse",path:"/Applications/lapse.app"}),appIcon=path.join(__dirname,"appTemplate.png"),recordIcon=path.join(__dirname,"recordTemplate.png");let tray,interval,imagesDir,browserWindow,isPaused=!1,isRecording=!1,framecount=0,user={isVerified:!1,id:null,name:null},settings={autolaunch:!0,quality:25,format:"mp4",framerate:30,key:null},hours=0,minutes=0,seconds=0;store.get("user-info")&&(user=store.get("user-info")),store.get("lapse")?settings=store.get("lapse"):store.set("lapse",settings);const createTray=async()=>{tray=new Tray(appIcon),tray.setToolTip("Lapse | Start recording");let e=hasScreenCapturePermission();if(console.log(e),!e)return tray.setToolTip("Enable recording permission in system preferances "),openSystemPreferences("security","Privacy_ScreenCapture"),void app.quit();tray.on("click",startRecording)},startRecording=()=>{if(isPaused){const e=[{label:"Stop recording",click:async()=>{await stopRecording()}},{role:"quit",accelerator:(process.platform,"Alt+Shift+L")}],t=Menu.buildFromTemplate(e);tray.popUpContextMenu(t)}else if(isRecording)isRecording&&clickTray();else{const e=[{label:"start recording",accelerator:"darwin"===process.platform?"Alt+Cmd+L":"Alt+Ctrl+L",click:()=>{clickTray()}},{label:"Export format",submenu:[{label:"mp4",type:"checkbox",click:()=>{settings.format="mp4",UpdateSettings(settings)},checked:"mp4"===settings.format},{label:"mkv",type:"checkbox",click:()=>{settings.format="mkv",UpdateSettings(settings)},checked:"mkv"===settings.format},{label:"webm",type:"checkbox",click:()=>{settings.format="webm",UpdateSettings(settings)},checked:"webm"===settings.format},{label:"avi",type:"checkbox",click:()=>{settings.format="avi",UpdateSettings(settings)},checked:"avi"===settings.format}]},{label:"Quality",submenu:[{label:"Auto",type:"checkbox",click:()=>{settings.quality=25,UpdateSettings(settings)},checked:25===settings.quality},{label:"8k",type:"checkbox",click:()=>{settings.quality=6,UpdateSettings(settings)},checked:6===settings.quality},{label:"4k",type:"checkbox",click:()=>{settings.quality=12,UpdateSettings(settings)},checked:12===settings.quality},{label:"1080p",type:"checkbox",click:()=>{settings.quality=18,UpdateSettings(settings)},checked:18===settings.quality},{label:"720p",type:"checkbox",click:()=>{settings.quality=24,UpdateSettings(settings)},checked:24===settings.quality},{label:"480p",type:"checkbox",click:()=>{settings.quality=32,UpdateSettings(settings)},checked:32===settings.quality},{label:"360",type:"checkbox",click:()=>{settings.quality=38,UpdateSettings(settings)},checked:38===settings.quality},{label:"240p",type:"checkbox",click:()=>{settings.quality=42,UpdateSettings(settings)},checked:42===settings.quality},{label:"144p",type:"checkbox",click:()=>{settings.quality=48,UpdateSettings(settings)},checked:48===settings.quality}]},{label:"Speed (framerate)",submenu:[{label:"12",type:"checkbox",click:()=>{settings.framerate=12,UpdateSettings(settings)},checked:12===settings.framerate},{label:"24",type:"checkbox",click:()=>{settings.framerate=24,UpdateSettings(settings)},checked:24===settings.framerate},{label:"30",type:"checkbox",click:()=>{settings.framerate=30,UpdateSettings(settings)},checked:30===settings.framerate},{label:"60",type:"checkbox",click:()=>{settings.framerate=60,UpdateSettings(settings)},checked:60===settings.framerate}]},{type:"separator"},{label:"Reset Settings",click:()=>{let e={autolaunch:!0,quality:25,format:"mp4",framerate:30};UpdateSettings(e)}},{label:"Auto launch",type:"checkbox",click:()=>{settings.autolaunch=!settings.autolaunch,UpdateSettings(settings)},checked:settings.autolaunch},{type:"separator"},{label:"About Lapse",click:()=>{shell.openExternal("https://lapse.achuth.dev")}},{role:"quit",accelerator:(process.platform,"Alt+Shift+L")}],t=Menu.buildFromTemplate(e);tray.popUpContextMenu(t)}},createGlobalShortcuts=()=>{globalShortcut.register("CommandOrControl+Alt+l",clickTray),globalShortcut.register("Shift+Alt+q",()=>{app.quit()})},clickTray=async()=>{if(isRecording){if(isPaused)return isPaused=!1,void createScreenshotInterval();{clearInterval(interval),isPaused=!0;let e=hours.toString().length>1?hours:`0${hours}`,t=minutes.toString().length>1?minutes:`0${minutes}`,s=seconds.toString().length>1?seconds:`0${seconds}`;tray.setTitle(`${e} : ${t}: ${s}`),tray.setToolTip("Paused!!");const i=[{label:"Resume recording",accelerator:"darwin"===process.platform?"Alt+Cmd+L":"Alt+Ctrl+L",click:()=>{clickTray(),tray.setTitle("")}},{label:"Stop recording",click:async()=>{isRecording=!1,initiVariables(),await stopRecording()}},{role:"quit",accelerator:(process.platform,"Alt+Shift+L")}],a=Menu.buildFromTemplate(i);return void tray.popUpContextMenu(a)}}tray.setToolTip("Recording...."),tray.setImage(recordIcon),isRecording=!0,framecount=0,temp.mkdir("lapse_images",(e,t)=>{if(e)return console.log(e);imagesDir=t,ffmpegImgPattern=path.join(imagesDir,"lapse%d.jpeg")}),createScreenshotInterval()},createScreenshotInterval=()=>{interval=setInterval(()=>{framecount+=1,seconds++,60===seconds&&(minutes++,seconds=0),60===minutes&&(hours++,minutes=0);hours.toString().length,minutes.toString().length,seconds.toString().length;takeScreenShot(framecount)},1e3)},stopRecording=async()=>{isRecording=!1,initiVariables();const{filePath:e}=await dialog.showSaveDialog({defaultPath:`lapse-${Date.now()}`});if(!e)return temp.cleanupSync(),void showNotification("Error occured during process");{let t=e.split("\\"),s=t[t.length-1].split(".")[0];t[t.length-1]=`${s}.${settings.format}`,t=t.join("\\");let i=["-y","-r",`${settings.framerate}`,"-f","image2","-start_number","0","-i",ffmpegImgPattern,"-c:v","libx264","-preset","slow","-profile:v","high","-vcodec","libx264","-crf",`${settings.quality}`,"-coder","1","-pix_fmt","yuv420p","-movflags","+faststart","-g","30","-bf","2","-c:a","aac","-b:a","384k","-profile:a","aac_low",t],a=Date.now();console.log("Start Time Create Timelape "+a);let n=spawn(ffmpegPath,i);n.stderr.setEncoding("utf8"),n.stdout.setEncoding("utf8"),n.stdout.on("data",function(){}),n.on("error",e=>{temp.cleanupSync(),console.log("Error On Command",e)}),n.on("exit",e=>{console.log("exit code "+e);let s=Date.now();0===e&&(console.log(`This video take ${(s-a)/6e4} minutes `),console.log("timelapse cleanup"),showNotification(`Video saved in path ${t}`)),temp.cleanupSync()})}};app.on("ready",()=>{if(user.isVerified)return settings.autolaunch?autoLauncher.enable():autoLauncher.disable(),console.log("o-log"),createTray(),void createGlobalShortcuts();createBrowserWindow()}),app.dock&&app.dock.hide(),app.on("window-all-closed",()=>{"darwin"!==process.platform&&app.quit()}),app.on("activate",()=>{BrowserWindow.getAllWindows().length}),app.on("before-quit",async()=>{isRecording&&await stopRecording()}),ipcMain.on("verified",(e,{id:t,name:s})=>{e.returnValue="Verified",user.id=t,user.name=s,user.isVerified=!0,store.set("user-info",user),browserWindow.hide(),console.log("v-lo"),createTray()}),ipcMain.on("quit",()=>{app.quit()});